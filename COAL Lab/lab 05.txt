INCLUDE Irvine32.inc
.data
	arrayB	BYTE 60, 70, 80
	arrayW 	WORD 150, 250, 350
	arrayD 	DWORD 600, 1200, 1800
	sumB BYTE ?
	sumW WORD ?


.code
	main PROC
		mov eax,0
		mov esi,0
		mov al,arrayB[esi*TYPE arrayB]
		add esi,2
		add al,arrayB[esi*TYPE arrayB]
		call DumpRegs

		mov esi,0
		mov ax,arrayW[esi*TYPE arrayW]
		add esi,2
		add ax,arrayW[esi*TYPE arrayW]
		call DumpRegs

		mov esi,0
		mov eax,arrayD[esi*TYPE arrayD]
		add esi,2
		add eax,arrayD[esi*TYPE arrayD]
		call DumpRegs
	exit
	main ENDP
	END main

----------------2-------------------
INCLUDE Irvine32.inc
.data
	arr DWORD 1000, 2000, 4000, 6000
	ptrD dword OFFSET arr
	ptrD1 dword OFFSET [arr+1]
	ptrD2 dword OFFSET [arr+2]
	ptrD3 dword OFFSET [arr+3]
.code
	main PROC
		mov eax,0
		mov eax,[ptrD]
		mov ebx,0
		mov ebx,[ptrD1]
		call DumpRegs
		mov eax,0
		mov eax,[ptrD2]
		mov ebx,0
		mov ebx,[ptrD3]
		call DumpRegs

	exit
	main ENDP
	END main
------------3---------------
INCLUDE Irvine32.inc
.data
	arr BYTE 1,2,3,4,5,6
	s BYTE 6
	
.code
	main PROC
		mov eax,0
		movzx ecx,s
		mov esi,OFFSET arr
		L1:
			mov al,[esi+ecx-1]
			call WriteDec
			call crlf
			Loop L1

	exit
	main ENDP
	END main
----------------4--------------------
INCLUDE Irvine32.inc
.data
	b BYTE 1
	a BYTE 1
	s BYTE ?
	
.code
	main PROC
		mov eax,0
		mov al,a
		Call WriteDec
		Call crlf
		mov bl,b
		Call WriteDec
		call crlf
		mov ecx,8
		L1:
			add al,bl
			Call WriteDec
			call crlf
			mov dl,al
			mov s,dl
			mov a,bl
			mov al,a
			mov b,dl
			mov bl,b
				loop L1
		
		

	exit
	main ENDP
	END main
-------------------5--------------------
INCLUDE Irvine32.inc
.data
	arr dword 15,10,25,20,30
	i dword 0
	j dword 0
	count Dword ?
	x dword 4
	temp dword ?
	
.code
	main PROC
		mov eax,0
		mov ecx,5
		L1:
		mov count,ecx
		mov eax,count
		sub eax,1
		sub eax,i
		mov ecx,eax
		mov si,0
		mov eax,0
		mov ebx,0
		L2:
			mov ebx,arr[si]
			mov eax,arr[si+1]
			cmp ebx,eax
			ja L3
			jmp L4
			L3:
			mov temp,ebx
			mov arr[si],eax
			mov arr[si+1],ebx
			jmp L4
		L4: add si,1
			loop L2
		mov ecx,count
		loop L1


	exit
	main ENDP
	END main
