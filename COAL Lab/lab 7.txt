EISHA TIR RAAZIA
sec C
17k-3730
Lab 7
--------1---------
INCLUDE Irvine32.inc
.data
	eqstr BYTE "Integers are equal",0
	neqstr BYTE "Integers are not equal",0
	var dword 5
	x dword ?
	v byte 0
	msg byte "Hello..",0
	msg2 byte "World..",0
.code
	main PROC
			;-----1a------

	mov eax,x
	mov ecx,-8
	mov edx,7
	cmp var,ecx
	jl L1
		mov eax,1
	L1:
		cmp ecx,edx
		jge L2
		mov eax,1
	L2:
		mov eax,0

			;------1b------

	mov eax,0
	mov ebx,0
	mov al,v
	mov bl,10
	_while:
		mov al,v
		cmp al,bl
		ja _endwhile
			mov ah,0
			mov cl,2
			div cl
			cmp ah,0
		je L3
			mov edx,offset msg2
			call writestring
			inc v
			call crlf
			jmp _while
		L3:
		mov edx,offset msg
		call writestring
		inc v
		call crlf
		jmp _while
		
	_endwhile:
	exit
	main ENDP
	END main
	
--------2---------
INCLUDE Irvine32.inc
.data
	intArr	SWORD	0, 0, 0, 0, 1, 20, 35, -12, 66, 4, 0
	
.code
	main PROC
		mov eax,0
		mov ecx,lengthof intArr	
		mov esi,0
		L1:
			mov ax,intArr[esi]
			cmp eax,0
			jne l2
			jmp l3
			
		l2:
		call writedec
		call crlf
		jmp l4

		l3:
			add esi,2
			loop L1
		l4:exit


	exit
	main ENDP
	END main
------------------4--------------------
INCLUDE Irvine32.inc
.data
	a byte ?
	b byte ?
	x byte ?
	y byte ?
	msg1 BYTE "Integers are equal!",0
	msg2 BYTE "Integers are not equal!",0
.code
	main PROC
		mov eax,0
		call readint
		mov a,al
		mov eax,0
		call readint
		mov b,al
		mov eax,0
		call readint
		mov x,al
		mov eax,0
		call readint
		mov y,al
		cmp al,x
		jne l1
		cmp al,b
		jne l1
		cmp al,a
		jne l1
		jmp l2
	l2:
	mov edx,offset msg1
	call writestring
	jmp l3
	l1:
	mov edx,offset msg2
	call writestring
	l3:exit

	exit
	main ENDP
	END main
----------6-------------
INCLUDE Irvine32.inc
.data
	arr	WORD  10, 4, 7, 14, 299, 156, 3, 19, 29, 300, 20
	msg1 byte "integer found",0
	msg2 byte "integer not found",0
	
.code
	main PROC
		mov eax,0
		call readint
		mov ecx,lengthof arr
		mov esi,0
		l1:
			cmp ax,arr[esi]
			je l2
			jmp l3
		l3:
			add esi,2
			loop l1
			jmp l4

		l2:
			call crlf
			mov edx,offset msg1
			call writestring
			call crlf
			jmp l5

		l4:
			mov edx,offset msg2
			call writestring
			call crlf
			jmp l5

		l5:
			exit

	exit
	main ENDP
	END main
----------------7-------------

include irvine32.inc
.data

swapcount byte ?
a byte 10,9,8,7,6,5,4,3,2,1
msg byte 'count: ',0

.code
main proc

mov edx,0
mov edx,offset msg
call writestring

mov eax,0
mov ebx,0
mov ecx,10
mov esi,1
mov edi,0
l1:
mov al,a[edi]
mov bl,a[esi]
cmp al,bl
inc edi
inc esi
ja l2
jmp l3

l2:
xchg al,dl
mov a[edi],al
mov a[esi],bl
inc swapcount
jmp l3

l3:
loop l1

mov al,swapcount
call writedec
call crlf

exit
main endp
end main
