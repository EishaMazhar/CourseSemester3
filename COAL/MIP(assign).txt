# Q3(ia)
.data

op1: .word 3
op2: .word 5
op3: .word 5
X: .word 0
Y: .word 10

.text
.globl main
main:
lw $t1,op2
nex:
lw $t0,op1
bge $t0,$t1,l1
lw $t0,op1
add $t0,$t0,1
sw $t0,op1
lw $t5,op3
bne $t5,$t1,l2
lw $t3,Y
sw $t3,X
add $t3,$t3,2
sw $t3,X
b l3
l2:
lw $t3,y
add $t3,$t3,10
sw $t3,X
l3:
b nex
l1:
lw $t3,X
move $a0,$t3
li $v0,1
syscall


li $v0, 10 # call code for terminate
syscall # system call
.end main
..........................................................................................
# Q3(ib)

.data
VAL1: .word 10
VAL2: .word 5
VAL3: .word 2
X: .word 0


.text
.globl main
main:
lw $t1,VAL2
lw $t5,VAL1
lw $t4,VAL3
ble $t5,$t1,l1
ble $t1,$t4,l1
li $t0,10
sw $t0,X
b l2
l1:
li $t0,20
sw $t0,X

l2:

li $v0, 10 # call code for terminate
syscall # system call
.end main


...........................................................................
 #Q3(ii)

.data
X: .word 5
Y: .word 2
Z: .word 10
mini: .word 0
str1: .ascii "minimum number : \n"


.text
.globl main
main:
lw $a0,X
lw $a1,Y
lw $a2,Z
jal MINIMUM
sw $v0,mini
lw $t0,mini
la $a0,str1
li $v0,4
syscall

move $a0,$t0
li $v0,1
syscall



li $v0, 10 # call code for terminate
syscall # system call
.end main

.globl MINIMUM
.ent MINIMUM
MINIMUM:
li $v0,0
add $v0,$v0,$a2  #Z
li $t1,0
addu $t1,$t1,$a1  #y
blt $v0,$t1,l1
li $v0,0
addu $v0,$v0,$t1
l1:

blt $v0,$a0,l2
li $v0,0
addu $v0,$v0,$t1
l2:



jr $ra
.end MINIMUM
...........................................................
# Q4(1)
.data
sequence_number: .word 0
revision_count: .byte 0
status: .byte 0
sensor_data: .word 0

.text
.globl main
main:
li $t0,0x12345678
move $t1,$t0
and $t1,$t1,0x00000fff
sw $t1,sequence_number
move $t1,$t0
srl $t1,$t1,12
and $t1,$t1,0x00000007
sw $t1,revision_count
move $t1,$t0
srl $t1,$t1,15
and $t1,$t1,0x00000001
sb $t1,status
move $t1,$t0
srl $t1,$t1,16
sw $t1,sensor_data



li $v0, 10 # call code for terminate
syscall # system call
.end main
........................................................................
# Q4(ii)
.data
X: .word 0

.text
.globl main
main:
li $v0,5
syscall
move $t0,$v0
sw $t0,X
sll $t0,$t0,4
lw $t1,X
sll $t1,$t1,2
addu $t0,$t0,$t1
lw $t1,X
sll $t1,$t1,1
addu $t0,$t0,$t1
lw $t1,X
addu $t0,$t0,$t1
sw $t0,X

move $a0,$t0
li $v0,1
syscall


li $v0, 10 # call code for terminate
syscall # system call
.end main
.....................................................
# Q4(vII)
.data
dividend: .word 0xD4A4
divisor: .byte 0xA


.text
.globl main
main:
lw $a0,dividend
lb $a1,divisor
jal recursive
move $a0,$v0
li $v0,1
syscall




li $v0, 10 # call code for terminate
syscall # system call
.end main

.globl recursive
.ent recursive
recursive:
subu $sp,$sp,8
sw $ra,($sp)
sw $s0,4($sp)
move $s0,$a0
move $t0,$a1
ble $a0,0x5,l1
divu $s0,$a0,$t0
move $a0,$s0
jal recursive
l1:
move $v0,$a0
lw $ra,($sp)
lw $s0,4($sp)
addu $sp,$sp,8

jr $ra
.end recursive



